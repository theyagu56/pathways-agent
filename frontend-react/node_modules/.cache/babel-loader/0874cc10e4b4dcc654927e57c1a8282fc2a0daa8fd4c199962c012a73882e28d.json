{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"aksara\",\n      verb: \"mempunyai\"\n    },\n    file: {\n      unit: \"bait\",\n      verb: \"mempunyai\"\n    },\n    array: {\n      unit: \"elemen\",\n      verb: \"mempunyai\"\n    },\n    set: {\n      unit: \"elemen\",\n      verb: \"mempunyai\"\n    }\n  };\n  function getSizing(origin) {\n    return Sizable[origin] ?? null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"nombor\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"array\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"input\",\n    email: \"alamat e-mel\",\n    url: \"URL\",\n    emoji: \"emoji\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"tarikh masa ISO\",\n    date: \"tarikh ISO\",\n    time: \"masa ISO\",\n    duration: \"tempoh ISO\",\n    ipv4: \"alamat IPv4\",\n    ipv6: \"alamat IPv6\",\n    cidrv4: \"julat IPv4\",\n    cidrv6: \"julat IPv6\",\n    base64: \"string dikodkan base64\",\n    base64url: \"string dikodkan base64url\",\n    json_string: \"string JSON\",\n    e164: \"nombor E.164\",\n    jwt: \"JWT\",\n    template_literal: \"input\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return `Input tidak sah: dijangka ${issue.expected}, diterima ${parsedType(issue.input)}`;\n      case \"invalid_value\":\n        if (issue.values.length === 1) return `Input tidak sah: dijangka ${util.stringifyPrimitive(issue.values[0])}`;\n        return `Pilihan tidak sah: dijangka salah satu daripada ${util.joinValues(issue.values, \"|\")}`;\n      case \"too_big\":\n        {\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elemen\"}`;\n          return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} adalah ${adj}${issue.maximum.toString()}`;\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return `Terlalu kecil: dijangka ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n          }\n          return `Terlalu kecil: dijangka ${issue.origin} adalah ${adj}${issue.minimum.toString()}`;\n        }\n      case \"invalid_format\":\n        {\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") return `String tidak sah: mesti bermula dengan \"${_issue.prefix}\"`;\n          if (_issue.format === \"ends_with\") return `String tidak sah: mesti berakhir dengan \"${_issue.suffix}\"`;\n          if (_issue.format === \"includes\") return `String tidak sah: mesti mengandungi \"${_issue.includes}\"`;\n          if (_issue.format === \"regex\") return `String tidak sah: mesti sepadan dengan corak ${_issue.pattern}`;\n          return `${Nouns[_issue.format] ?? issue.format} tidak sah`;\n        }\n      case \"not_multiple_of\":\n        return `Nombor tidak sah: perlu gandaan ${issue.divisor}`;\n      case \"unrecognized_keys\":\n        return `Kunci tidak dikenali: ${util.joinValues(issue.keys, \", \")}`;\n      case \"invalid_key\":\n        return `Kunci tidak sah dalam ${issue.origin}`;\n      case \"invalid_union\":\n        return \"Input tidak sah\";\n      case \"invalid_element\":\n        return `Nilai tidak sah dalam ${issue.origin}`;\n      default:\n        return `Input tidak sah`;\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":{"version":3,"names":["util","error","Sizable","string","unit","verb","file","array","set","getSizing","origin","parsedType","data","t","Number","isNaN","Array","isArray","Object","getPrototypeOf","prototype","constructor","name","Nouns","regex","email","url","emoji","uuid","uuidv4","uuidv6","nanoid","guid","cuid","cuid2","ulid","xid","ksuid","datetime","date","time","duration","ipv4","ipv6","cidrv4","cidrv6","base64","base64url","json_string","e164","jwt","template_literal","issue","code","expected","input","values","length","stringifyPrimitive","joinValues","adj","inclusive","sizing","maximum","toString","minimum","_issue","format","prefix","suffix","includes","pattern","divisor","keys","localeError"],"sources":["/Users/thiyagarajankamalakannan/Projects/pathways-ai/frontend-react/node_modules/zod/v4/locales/ms.js"],"sourcesContent":["import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"aksara\", verb: \"mempunyai\" },\n        file: { unit: \"bait\", verb: \"mempunyai\" },\n        array: { unit: \"elemen\", verb: \"mempunyai\" },\n        set: { unit: \"elemen\", verb: \"mempunyai\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"nombor\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"alamat e-mel\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"tarikh masa ISO\",\n        date: \"tarikh ISO\",\n        time: \"masa ISO\",\n        duration: \"tempoh ISO\",\n        ipv4: \"alamat IPv4\",\n        ipv6: \"alamat IPv6\",\n        cidrv4: \"julat IPv4\",\n        cidrv6: \"julat IPv6\",\n        base64: \"string dikodkan base64\",\n        base64url: \"string dikodkan base64url\",\n        json_string: \"string JSON\",\n        e164: \"nombor E.164\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Input tidak sah: dijangka ${issue.expected}, diterima ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Input tidak sah: dijangka ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Pilihan tidak sah: dijangka salah satu daripada ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elemen\"}`;\n                return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} adalah ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Terlalu kecil: dijangka ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Terlalu kecil: dijangka ${issue.origin} adalah ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `String tidak sah: mesti bermula dengan \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `String tidak sah: mesti berakhir dengan \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `String tidak sah: mesti mengandungi \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `String tidak sah: mesti sepadan dengan corak ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} tidak sah`;\n            }\n            case \"not_multiple_of\":\n                return `Nombor tidak sah: perlu gandaan ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Kunci tidak dikenali: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Kunci tidak sah dalam ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Input tidak sah\";\n            case \"invalid_element\":\n                return `Nilai tidak sah dalam ${issue.origin}`;\n            default:\n                return `Input tidak sah`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}