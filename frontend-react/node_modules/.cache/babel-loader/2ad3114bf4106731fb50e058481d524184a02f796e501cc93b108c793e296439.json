{"ast":null,"code":"import * as core from \"../core/index.js\";\nimport { $ZodError } from \"../core/index.js\";\nconst initializer = (inst, issues) => {\n  $ZodError.init(inst, issues);\n  inst.name = \"ZodError\";\n  Object.defineProperties(inst, {\n    format: {\n      value: mapper => core.formatError(inst, mapper)\n      // enumerable: false,\n    },\n    flatten: {\n      value: mapper => core.flattenError(inst, mapper)\n      // enumerable: false,\n    },\n    addIssue: {\n      value: issue => inst.issues.push(issue)\n      // enumerable: false,\n    },\n    addIssues: {\n      value: issues => inst.issues.push(...issues)\n      // enumerable: false,\n    },\n    isEmpty: {\n      get() {\n        return inst.issues.length === 0;\n      }\n      // enumerable: false,\n    }\n  });\n  // Object.defineProperty(inst, \"isEmpty\", {\n  //   get() {\n  //     return inst.issues.length === 0;\n  //   },\n  // });\n};\nexport const ZodError = core.$constructor(\"ZodError\", initializer);\nexport const ZodRealError = core.$constructor(\"ZodError\", initializer, {\n  Parent: Error\n});\n// /** @deprecated Use `z.core.$ZodErrorMapCtx` instead. */\n// export type ErrorMapCtx = core.$ZodErrorMapCtx;","map":{"version":3,"names":["core","$ZodError","initializer","inst","issues","init","name","Object","defineProperties","format","value","mapper","formatError","flatten","flattenError","addIssue","issue","push","addIssues","isEmpty","get","length","ZodError","$constructor","ZodRealError","Parent","Error"],"sources":["/Users/thiyagarajankamalakannan/Projects/pathways-ai/frontend-react/node_modules/zod/v4/classic/errors.js"],"sourcesContent":["import * as core from \"../core/index.js\";\nimport { $ZodError } from \"../core/index.js\";\nconst initializer = (inst, issues) => {\n    $ZodError.init(inst, issues);\n    inst.name = \"ZodError\";\n    Object.defineProperties(inst, {\n        format: {\n            value: (mapper) => core.formatError(inst, mapper),\n            // enumerable: false,\n        },\n        flatten: {\n            value: (mapper) => core.flattenError(inst, mapper),\n            // enumerable: false,\n        },\n        addIssue: {\n            value: (issue) => inst.issues.push(issue),\n            // enumerable: false,\n        },\n        addIssues: {\n            value: (issues) => inst.issues.push(...issues),\n            // enumerable: false,\n        },\n        isEmpty: {\n            get() {\n                return inst.issues.length === 0;\n            },\n            // enumerable: false,\n        },\n    });\n    // Object.defineProperty(inst, \"isEmpty\", {\n    //   get() {\n    //     return inst.issues.length === 0;\n    //   },\n    // });\n};\nexport const ZodError = core.$constructor(\"ZodError\", initializer);\nexport const ZodRealError = core.$constructor(\"ZodError\", initializer, {\n    Parent: Error,\n});\n// /** @deprecated Use `z.core.$ZodErrorMapCtx` instead. */\n// export type ErrorMapCtx = core.$ZodErrorMapCtx;\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,kBAAkB;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;EAClCH,SAAS,CAACI,IAAI,CAACF,IAAI,EAAEC,MAAM,CAAC;EAC5BD,IAAI,CAACG,IAAI,GAAG,UAAU;EACtBC,MAAM,CAACC,gBAAgB,CAACL,IAAI,EAAE;IAC1BM,MAAM,EAAE;MACJC,KAAK,EAAGC,MAAM,IAAKX,IAAI,CAACY,WAAW,CAACT,IAAI,EAAEQ,MAAM;MAChD;IACJ,CAAC;IACDE,OAAO,EAAE;MACLH,KAAK,EAAGC,MAAM,IAAKX,IAAI,CAACc,YAAY,CAACX,IAAI,EAAEQ,MAAM;MACjD;IACJ,CAAC;IACDI,QAAQ,EAAE;MACNL,KAAK,EAAGM,KAAK,IAAKb,IAAI,CAACC,MAAM,CAACa,IAAI,CAACD,KAAK;MACxC;IACJ,CAAC;IACDE,SAAS,EAAE;MACPR,KAAK,EAAGN,MAAM,IAAKD,IAAI,CAACC,MAAM,CAACa,IAAI,CAAC,GAAGb,MAAM;MAC7C;IACJ,CAAC;IACDe,OAAO,EAAE;MACLC,GAAGA,CAAA,EAAG;QACF,OAAOjB,IAAI,CAACC,MAAM,CAACiB,MAAM,KAAK,CAAC;MACnC;MACA;IACJ;EACJ,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA;AACJ,CAAC;AACD,OAAO,MAAMC,QAAQ,GAAGtB,IAAI,CAACuB,YAAY,CAAC,UAAU,EAAErB,WAAW,CAAC;AAClE,OAAO,MAAMsB,YAAY,GAAGxB,IAAI,CAACuB,YAAY,CAAC,UAAU,EAAErB,WAAW,EAAE;EACnEuB,MAAM,EAAEC;AACZ,CAAC,CAAC;AACF;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}