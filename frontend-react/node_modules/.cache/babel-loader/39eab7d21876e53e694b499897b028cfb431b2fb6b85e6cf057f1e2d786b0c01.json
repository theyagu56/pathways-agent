{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"توکي\",\n      verb: \"ولري\"\n    },\n    file: {\n      unit: \"بایټس\",\n      verb: \"ولري\"\n    },\n    array: {\n      unit: \"توکي\",\n      verb: \"ولري\"\n    },\n    set: {\n      unit: \"توکي\",\n      verb: \"ولري\"\n    }\n  };\n  function getSizing(origin) {\n    return Sizable[origin] ?? null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"عدد\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"ارې\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"ورودي\",\n    email: \"بریښنالیک\",\n    url: \"یو آر ال\",\n    emoji: \"ایموجي\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"نیټه او وخت\",\n    date: \"نېټه\",\n    time: \"وخت\",\n    duration: \"موده\",\n    ipv4: \"د IPv4 پته\",\n    ipv6: \"د IPv6 پته\",\n    cidrv4: \"د IPv4 ساحه\",\n    cidrv6: \"د IPv6 ساحه\",\n    base64: \"base64-encoded متن\",\n    base64url: \"base64url-encoded متن\",\n    json_string: \"JSON متن\",\n    e164: \"د E.164 شمېره\",\n    jwt: \"JWT\",\n    template_literal: \"ورودي\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return `ناسم ورودي: باید ${issue.expected} وای, مګر ${parsedType(issue.input)} ترلاسه شو`;\n      case \"invalid_value\":\n        if (issue.values.length === 1) {\n          return `ناسم ورودي: باید ${util.stringifyPrimitive(issue.values[0])} وای`;\n        }\n        return `ناسم انتخاب: باید یو له ${util.joinValues(issue.values, \"|\")} څخه وای`;\n      case \"too_big\":\n        {\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return `ډیر لوی: ${issue.origin ?? \"ارزښت\"} باید ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"عنصرونه\"} ولري`;\n          }\n          return `ډیر لوی: ${issue.origin ?? \"ارزښت\"} باید ${adj}${issue.maximum.toString()} وي`;\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return `ډیر کوچنی: ${issue.origin} باید ${adj}${issue.minimum.toString()} ${sizing.unit} ولري`;\n          }\n          return `ډیر کوچنی: ${issue.origin} باید ${adj}${issue.minimum.toString()} وي`;\n        }\n      case \"invalid_format\":\n        {\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") {\n            return `ناسم متن: باید د \"${_issue.prefix}\" سره پیل شي`;\n          }\n          if (_issue.format === \"ends_with\") {\n            return `ناسم متن: باید د \"${_issue.suffix}\" سره پای ته ورسيږي`;\n          }\n          if (_issue.format === \"includes\") {\n            return `ناسم متن: باید \"${_issue.includes}\" ولري`;\n          }\n          if (_issue.format === \"regex\") {\n            return `ناسم متن: باید د ${_issue.pattern} سره مطابقت ولري`;\n          }\n          return `${Nouns[_issue.format] ?? issue.format} ناسم دی`;\n        }\n      case \"not_multiple_of\":\n        return `ناسم عدد: باید د ${issue.divisor} مضرب وي`;\n      case \"unrecognized_keys\":\n        return `ناسم ${issue.keys.length > 1 ? \"کلیډونه\" : \"کلیډ\"}: ${util.joinValues(issue.keys, \", \")}`;\n      case \"invalid_key\":\n        return `ناسم کلیډ په ${issue.origin} کې`;\n      case \"invalid_union\":\n        return `ناسمه ورودي`;\n      case \"invalid_element\":\n        return `ناسم عنصر په ${issue.origin} کې`;\n      default:\n        return `ناسمه ورودي`;\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":{"version":3,"names":["util","error","Sizable","string","unit","verb","file","array","set","getSizing","origin","parsedType","data","t","Number","isNaN","Array","isArray","Object","getPrototypeOf","prototype","constructor","name","Nouns","regex","email","url","emoji","uuid","uuidv4","uuidv6","nanoid","guid","cuid","cuid2","ulid","xid","ksuid","datetime","date","time","duration","ipv4","ipv6","cidrv4","cidrv6","base64","base64url","json_string","e164","jwt","template_literal","issue","code","expected","input","values","length","stringifyPrimitive","joinValues","adj","inclusive","sizing","maximum","toString","minimum","_issue","format","prefix","suffix","includes","pattern","divisor","keys","localeError"],"sources":["/Users/thiyagarajankamalakannan/Projects/pathways-ai/frontend-react/node_modules/zod/v4/locales/ps.js"],"sourcesContent":["import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"توکي\", verb: \"ولري\" },\n        file: { unit: \"بایټس\", verb: \"ولري\" },\n        array: { unit: \"توکي\", verb: \"ولري\" },\n        set: { unit: \"توکي\", verb: \"ولري\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"عدد\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"ارې\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ورودي\",\n        email: \"بریښنالیک\",\n        url: \"یو آر ال\",\n        emoji: \"ایموجي\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"نیټه او وخت\",\n        date: \"نېټه\",\n        time: \"وخت\",\n        duration: \"موده\",\n        ipv4: \"د IPv4 پته\",\n        ipv6: \"د IPv6 پته\",\n        cidrv4: \"د IPv4 ساحه\",\n        cidrv6: \"د IPv6 ساحه\",\n        base64: \"base64-encoded متن\",\n        base64url: \"base64url-encoded متن\",\n        json_string: \"JSON متن\",\n        e164: \"د E.164 شمېره\",\n        jwt: \"JWT\",\n        template_literal: \"ورودي\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `ناسم ورودي: باید ${issue.expected} وای, مګر ${parsedType(issue.input)} ترلاسه شو`;\n            case \"invalid_value\":\n                if (issue.values.length === 1) {\n                    return `ناسم ورودي: باید ${util.stringifyPrimitive(issue.values[0])} وای`;\n                }\n                return `ناسم انتخاب: باید یو له ${util.joinValues(issue.values, \"|\")} څخه وای`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `ډیر لوی: ${issue.origin ?? \"ارزښت\"} باید ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"عنصرونه\"} ولري`;\n                }\n                return `ډیر لوی: ${issue.origin ?? \"ارزښت\"} باید ${adj}${issue.maximum.toString()} وي`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `ډیر کوچنی: ${issue.origin} باید ${adj}${issue.minimum.toString()} ${sizing.unit} ولري`;\n                }\n                return `ډیر کوچنی: ${issue.origin} باید ${adj}${issue.minimum.toString()} وي`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `ناسم متن: باید د \"${_issue.prefix}\" سره پیل شي`;\n                }\n                if (_issue.format === \"ends_with\") {\n                    return `ناسم متن: باید د \"${_issue.suffix}\" سره پای ته ورسيږي`;\n                }\n                if (_issue.format === \"includes\") {\n                    return `ناسم متن: باید \"${_issue.includes}\" ولري`;\n                }\n                if (_issue.format === \"regex\") {\n                    return `ناسم متن: باید د ${_issue.pattern} سره مطابقت ولري`;\n                }\n                return `${Nouns[_issue.format] ?? issue.format} ناسم دی`;\n            }\n            case \"not_multiple_of\":\n                return `ناسم عدد: باید د ${issue.divisor} مضرب وي`;\n            case \"unrecognized_keys\":\n                return `ناسم ${issue.keys.length > 1 ? \"کلیډونه\" : \"کلیډ\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `ناسم کلیډ په ${issue.origin} کې`;\n            case \"invalid_union\":\n                return `ناسمه ورودي`;\n            case \"invalid_element\":\n                return `ناسم عنصر په ${issue.origin} کې`;\n            default:\n                return `ناسمه ورودي`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}