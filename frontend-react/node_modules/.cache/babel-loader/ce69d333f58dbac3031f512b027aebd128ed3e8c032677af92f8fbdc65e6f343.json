{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"文字\",\n      verb: \"である\"\n    },\n    file: {\n      unit: \"バイト\",\n      verb: \"である\"\n    },\n    array: {\n      unit: \"要素\",\n      verb: \"である\"\n    },\n    set: {\n      unit: \"要素\",\n      verb: \"である\"\n    }\n  };\n  function getSizing(origin) {\n    return Sizable[origin] ?? null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"数値\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"配列\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"入力値\",\n    email: \"メールアドレス\",\n    url: \"URL\",\n    emoji: \"絵文字\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"ISO日時\",\n    date: \"ISO日付\",\n    time: \"ISO時刻\",\n    duration: \"ISO期間\",\n    ipv4: \"IPv4アドレス\",\n    ipv6: \"IPv6アドレス\",\n    cidrv4: \"IPv4範囲\",\n    cidrv6: \"IPv6範囲\",\n    base64: \"base64エンコード文字列\",\n    base64url: \"base64urlエンコード文字列\",\n    json_string: \"JSON文字列\",\n    e164: \"E.164番号\",\n    jwt: \"JWT\",\n    template_literal: \"入力値\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return `無効な入力: ${issue.expected}が期待されましたが、${parsedType(issue.input)}が入力されました`;\n      case \"invalid_value\":\n        if (issue.values.length === 1) return `無効な入力: ${util.stringifyPrimitive(issue.values[0])}が期待されました`;\n        return `無効な選択: ${util.joinValues(issue.values, \"、\")}のいずれかである必要があります`;\n      case \"too_big\":\n        {\n          const adj = issue.inclusive ? \"以下である\" : \"より小さい\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return `大きすぎる値: ${issue.origin ?? \"値\"}は${issue.maximum.toString()}${sizing.unit ?? \"要素\"}${adj}必要があります`;\n          return `大きすぎる値: ${issue.origin ?? \"値\"}は${issue.maximum.toString()}${adj}必要があります`;\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \"以上である\" : \"より大きい\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return `小さすぎる値: ${issue.origin}は${issue.minimum.toString()}${sizing.unit}${adj}必要があります`;\n          return `小さすぎる値: ${issue.origin}は${issue.minimum.toString()}${adj}必要があります`;\n        }\n      case \"invalid_format\":\n        {\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") return `無効な文字列: \"${_issue.prefix}\"で始まる必要があります`;\n          if (_issue.format === \"ends_with\") return `無効な文字列: \"${_issue.suffix}\"で終わる必要があります`;\n          if (_issue.format === \"includes\") return `無効な文字列: \"${_issue.includes}\"を含む必要があります`;\n          if (_issue.format === \"regex\") return `無効な文字列: パターン${_issue.pattern}に一致する必要があります`;\n          return `無効な${Nouns[_issue.format] ?? issue.format}`;\n        }\n      case \"not_multiple_of\":\n        return `無効な数値: ${issue.divisor}の倍数である必要があります`;\n      case \"unrecognized_keys\":\n        return `認識されていないキー${issue.keys.length > 1 ? \"群\" : \"\"}: ${util.joinValues(issue.keys, \"、\")}`;\n      case \"invalid_key\":\n        return `${issue.origin}内の無効なキー`;\n      case \"invalid_union\":\n        return \"無効な入力\";\n      case \"invalid_element\":\n        return `${issue.origin}内の無効な値`;\n      default:\n        return `無効な入力`;\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":{"version":3,"names":["util","error","Sizable","string","unit","verb","file","array","set","getSizing","origin","parsedType","data","t","Number","isNaN","Array","isArray","Object","getPrototypeOf","prototype","constructor","name","Nouns","regex","email","url","emoji","uuid","uuidv4","uuidv6","nanoid","guid","cuid","cuid2","ulid","xid","ksuid","datetime","date","time","duration","ipv4","ipv6","cidrv4","cidrv6","base64","base64url","json_string","e164","jwt","template_literal","issue","code","expected","input","values","length","stringifyPrimitive","joinValues","adj","inclusive","sizing","maximum","toString","minimum","_issue","format","prefix","suffix","includes","pattern","divisor","keys","localeError"],"sources":["/Users/thiyagarajankamalakannan/Projects/pathways-ai/frontend-react/node_modules/zod/v4/locales/ja.js"],"sourcesContent":["import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"文字\", verb: \"である\" },\n        file: { unit: \"バイト\", verb: \"である\" },\n        array: { unit: \"要素\", verb: \"である\" },\n        set: { unit: \"要素\", verb: \"である\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"数値\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"配列\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"入力値\",\n        email: \"メールアドレス\",\n        url: \"URL\",\n        emoji: \"絵文字\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO日時\",\n        date: \"ISO日付\",\n        time: \"ISO時刻\",\n        duration: \"ISO期間\",\n        ipv4: \"IPv4アドレス\",\n        ipv6: \"IPv6アドレス\",\n        cidrv4: \"IPv4範囲\",\n        cidrv6: \"IPv6範囲\",\n        base64: \"base64エンコード文字列\",\n        base64url: \"base64urlエンコード文字列\",\n        json_string: \"JSON文字列\",\n        e164: \"E.164番号\",\n        jwt: \"JWT\",\n        template_literal: \"入力値\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `無効な入力: ${issue.expected}が期待されましたが、${parsedType(issue.input)}が入力されました`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `無効な入力: ${util.stringifyPrimitive(issue.values[0])}が期待されました`;\n                return `無効な選択: ${util.joinValues(issue.values, \"、\")}のいずれかである必要があります`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"以下である\" : \"より小さい\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `大きすぎる値: ${issue.origin ?? \"値\"}は${issue.maximum.toString()}${sizing.unit ?? \"要素\"}${adj}必要があります`;\n                return `大きすぎる値: ${issue.origin ?? \"値\"}は${issue.maximum.toString()}${adj}必要があります`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"以上である\" : \"より大きい\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `小さすぎる値: ${issue.origin}は${issue.minimum.toString()}${sizing.unit}${adj}必要があります`;\n                return `小さすぎる値: ${issue.origin}は${issue.minimum.toString()}${adj}必要があります`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `無効な文字列: \"${_issue.prefix}\"で始まる必要があります`;\n                if (_issue.format === \"ends_with\")\n                    return `無効な文字列: \"${_issue.suffix}\"で終わる必要があります`;\n                if (_issue.format === \"includes\")\n                    return `無効な文字列: \"${_issue.includes}\"を含む必要があります`;\n                if (_issue.format === \"regex\")\n                    return `無効な文字列: パターン${_issue.pattern}に一致する必要があります`;\n                return `無効な${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `無効な数値: ${issue.divisor}の倍数である必要があります`;\n            case \"unrecognized_keys\":\n                return `認識されていないキー${issue.keys.length > 1 ? \"群\" : \"\"}: ${util.joinValues(issue.keys, \"、\")}`;\n            case \"invalid_key\":\n                return `${issue.origin}内の無効なキー`;\n            case \"invalid_union\":\n                return \"無効な入力\";\n            case \"invalid_element\":\n                return `${issue.origin}内の無効な値`;\n            default:\n                return `無効な入力`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}