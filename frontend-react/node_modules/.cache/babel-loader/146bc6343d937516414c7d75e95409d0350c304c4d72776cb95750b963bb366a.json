{"ast":null,"code":"export class Doc {\n  constructor(args = []) {\n    this.content = [];\n    this.indent = 0;\n    if (this) this.args = args;\n  }\n  indented(fn) {\n    this.indent += 1;\n    fn(this);\n    this.indent -= 1;\n  }\n  write(arg) {\n    if (typeof arg === \"function\") {\n      arg(this, {\n        execution: \"sync\"\n      });\n      arg(this, {\n        execution: \"async\"\n      });\n      return;\n    }\n    const content = arg;\n    const lines = content.split(\"\\n\").filter(x => x);\n    const minIndent = Math.min(...lines.map(x => x.length - x.trimStart().length));\n    const dedented = lines.map(x => x.slice(minIndent)).map(x => \" \".repeat(this.indent * 2) + x);\n    for (const line of dedented) {\n      this.content.push(line);\n    }\n  }\n  compile() {\n    const F = Function;\n    const args = this?.args;\n    const content = this?.content ?? [``];\n    const lines = [...content.map(x => `  ${x}`)];\n    // console.log(lines.join(\"\\n\"));\n    return new F(...args, lines.join(\"\\n\"));\n  }\n}","map":{"version":3,"names":["Doc","constructor","args","content","indent","indented","fn","write","arg","execution","lines","split","filter","x","minIndent","Math","min","map","length","trimStart","dedented","slice","repeat","line","push","compile","F","Function","join"],"sources":["/Users/thiyagarajankamalakannan/Projects/pathways-ai/frontend-react/node_modules/zod/v4/core/doc.js"],"sourcesContent":["export class Doc {\n    constructor(args = []) {\n        this.content = [];\n        this.indent = 0;\n        if (this)\n            this.args = args;\n    }\n    indented(fn) {\n        this.indent += 1;\n        fn(this);\n        this.indent -= 1;\n    }\n    write(arg) {\n        if (typeof arg === \"function\") {\n            arg(this, { execution: \"sync\" });\n            arg(this, { execution: \"async\" });\n            return;\n        }\n        const content = arg;\n        const lines = content.split(\"\\n\").filter((x) => x);\n        const minIndent = Math.min(...lines.map((x) => x.length - x.trimStart().length));\n        const dedented = lines.map((x) => x.slice(minIndent)).map((x) => \" \".repeat(this.indent * 2) + x);\n        for (const line of dedented) {\n            this.content.push(line);\n        }\n    }\n    compile() {\n        const F = Function;\n        const args = this?.args;\n        const content = this?.content ?? [``];\n        const lines = [...content.map((x) => `  ${x}`)];\n        // console.log(lines.join(\"\\n\"));\n        return new F(...args, lines.join(\"\\n\"));\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,GAAG,CAAC;EACbC,WAAWA,CAACC,IAAI,GAAG,EAAE,EAAE;IACnB,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,MAAM,GAAG,CAAC;IACf,IAAI,IAAI,EACJ,IAAI,CAACF,IAAI,GAAGA,IAAI;EACxB;EACAG,QAAQA,CAACC,EAAE,EAAE;IACT,IAAI,CAACF,MAAM,IAAI,CAAC;IAChBE,EAAE,CAAC,IAAI,CAAC;IACR,IAAI,CAACF,MAAM,IAAI,CAAC;EACpB;EACAG,KAAKA,CAACC,GAAG,EAAE;IACP,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;MAC3BA,GAAG,CAAC,IAAI,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAC,CAAC;MAChCD,GAAG,CAAC,IAAI,EAAE;QAAEC,SAAS,EAAE;MAAQ,CAAC,CAAC;MACjC;IACJ;IACA,MAAMN,OAAO,GAAGK,GAAG;IACnB,MAAME,KAAK,GAAGP,OAAO,CAACQ,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC;IAClD,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,KAAK,CAACO,GAAG,CAAEJ,CAAC,IAAKA,CAAC,CAACK,MAAM,GAAGL,CAAC,CAACM,SAAS,CAAC,CAAC,CAACD,MAAM,CAAC,CAAC;IAChF,MAAME,QAAQ,GAAGV,KAAK,CAACO,GAAG,CAAEJ,CAAC,IAAKA,CAAC,CAACQ,KAAK,CAACP,SAAS,CAAC,CAAC,CAACG,GAAG,CAAEJ,CAAC,IAAK,GAAG,CAACS,MAAM,CAAC,IAAI,CAAClB,MAAM,GAAG,CAAC,CAAC,GAAGS,CAAC,CAAC;IACjG,KAAK,MAAMU,IAAI,IAAIH,QAAQ,EAAE;MACzB,IAAI,CAACjB,OAAO,CAACqB,IAAI,CAACD,IAAI,CAAC;IAC3B;EACJ;EACAE,OAAOA,CAAA,EAAG;IACN,MAAMC,CAAC,GAAGC,QAAQ;IAClB,MAAMzB,IAAI,GAAG,IAAI,EAAEA,IAAI;IACvB,MAAMC,OAAO,GAAG,IAAI,EAAEA,OAAO,IAAI,CAAC,EAAE,CAAC;IACrC,MAAMO,KAAK,GAAG,CAAC,GAAGP,OAAO,CAACc,GAAG,CAAEJ,CAAC,IAAK,KAAKA,CAAC,EAAE,CAAC,CAAC;IAC/C;IACA,OAAO,IAAIa,CAAC,CAAC,GAAGxB,IAAI,EAAEQ,KAAK,CAACkB,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3C;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}