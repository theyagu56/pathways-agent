{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"எழுத்துக்கள்\",\n      verb: \"கொண்டிருக்க வேண்டும்\"\n    },\n    file: {\n      unit: \"பைட்டுகள்\",\n      verb: \"கொண்டிருக்க வேண்டும்\"\n    },\n    array: {\n      unit: \"உறுப்புகள்\",\n      verb: \"கொண்டிருக்க வேண்டும்\"\n    },\n    set: {\n      unit: \"உறுப்புகள்\",\n      verb: \"கொண்டிருக்க வேண்டும்\"\n    }\n  };\n  function getSizing(origin) {\n    return Sizable[origin] ?? null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"எண் அல்லாதது\" : \"எண்\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"அணி\";\n          }\n          if (data === null) {\n            return \"வெறுமை\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"உள்ளீடு\",\n    email: \"மின்னஞ்சல் முகவரி\",\n    url: \"URL\",\n    emoji: \"emoji\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"ISO தேதி நேரம்\",\n    date: \"ISO தேதி\",\n    time: \"ISO நேரம்\",\n    duration: \"ISO கால அளவு\",\n    ipv4: \"IPv4 முகவரி\",\n    ipv6: \"IPv6 முகவரி\",\n    cidrv4: \"IPv4 வரம்பு\",\n    cidrv6: \"IPv6 வரம்பு\",\n    base64: \"base64-encoded சரம்\",\n    base64url: \"base64url-encoded சரம்\",\n    json_string: \"JSON சரம்\",\n    e164: \"E.164 எண்\",\n    jwt: \"JWT\",\n    template_literal: \"input\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return `தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${issue.expected}, பெறப்பட்டது ${parsedType(issue.input)}`;\n      case \"invalid_value\":\n        if (issue.values.length === 1) return `தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${util.stringifyPrimitive(issue.values[0])}`;\n        return `தவறான விருப்பம்: எதிர்பார்க்கப்பட்டது ${util.joinValues(issue.values, \"|\")} இல் ஒன்று`;\n      case \"too_big\":\n        {\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return `மிக பெரியது: எதிர்பார்க்கப்பட்டது ${issue.origin ?? \"மதிப்பு\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"உறுப்புகள்\"} ஆக இருக்க வேண்டும்`;\n          }\n          return `மிக பெரியது: எதிர்பார்க்கப்பட்டது ${issue.origin ?? \"மதிப்பு\"} ${adj}${issue.maximum.toString()} ஆக இருக்க வேண்டும்`;\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return `மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} ஆக இருக்க வேண்டும்`; //\n          }\n          return `மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${issue.origin} ${adj}${issue.minimum.toString()} ஆக இருக்க வேண்டும்`;\n        }\n      case \"invalid_format\":\n        {\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") return `தவறான சரம்: \"${_issue.prefix}\" இல் தொடங்க வேண்டும்`;\n          if (_issue.format === \"ends_with\") return `தவறான சரம்: \"${_issue.suffix}\" இல் முடிவடைய வேண்டும்`;\n          if (_issue.format === \"includes\") return `தவறான சரம்: \"${_issue.includes}\" ஐ உள்ளடக்க வேண்டும்`;\n          if (_issue.format === \"regex\") return `தவறான சரம்: ${_issue.pattern} முறைபாட்டுடன் பொருந்த வேண்டும்`;\n          return `தவறான ${Nouns[_issue.format] ?? issue.format}`;\n        }\n      case \"not_multiple_of\":\n        return `தவறான எண்: ${issue.divisor} இன் பலமாக இருக்க வேண்டும்`;\n      case \"unrecognized_keys\":\n        return `அடையாளம் தெரியாத விசை${issue.keys.length > 1 ? \"கள்\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n      case \"invalid_key\":\n        return `${issue.origin} இல் தவறான விசை`;\n      case \"invalid_union\":\n        return \"தவறான உள்ளீடு\";\n      case \"invalid_element\":\n        return `${issue.origin} இல் தவறான மதிப்பு`;\n      default:\n        return `தவறான உள்ளீடு`;\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":{"version":3,"names":["util","error","Sizable","string","unit","verb","file","array","set","getSizing","origin","parsedType","data","t","Number","isNaN","Array","isArray","Object","getPrototypeOf","prototype","constructor","name","Nouns","regex","email","url","emoji","uuid","uuidv4","uuidv6","nanoid","guid","cuid","cuid2","ulid","xid","ksuid","datetime","date","time","duration","ipv4","ipv6","cidrv4","cidrv6","base64","base64url","json_string","e164","jwt","template_literal","issue","code","expected","input","values","length","stringifyPrimitive","joinValues","adj","inclusive","sizing","maximum","toString","minimum","_issue","format","prefix","suffix","includes","pattern","divisor","keys","localeError"],"sources":["/Users/thiyagarajankamalakannan/Projects/pathways-ai/frontend-react/node_modules/zod/v4/locales/ta.js"],"sourcesContent":["import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"எழுத்துக்கள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n        file: { unit: \"பைட்டுகள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n        array: { unit: \"உறுப்புகள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n        set: { unit: \"உறுப்புகள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"எண் அல்லாதது\" : \"எண்\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"அணி\";\n                }\n                if (data === null) {\n                    return \"வெறுமை\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"உள்ளீடு\",\n        email: \"மின்னஞ்சல் முகவரி\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO தேதி நேரம்\",\n        date: \"ISO தேதி\",\n        time: \"ISO நேரம்\",\n        duration: \"ISO கால அளவு\",\n        ipv4: \"IPv4 முகவரி\",\n        ipv6: \"IPv6 முகவரி\",\n        cidrv4: \"IPv4 வரம்பு\",\n        cidrv6: \"IPv6 வரம்பு\",\n        base64: \"base64-encoded சரம்\",\n        base64url: \"base64url-encoded சரம்\",\n        json_string: \"JSON சரம்\",\n        e164: \"E.164 எண்\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${issue.expected}, பெறப்பட்டது ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${util.stringifyPrimitive(issue.values[0])}`;\n                return `தவறான விருப்பம்: எதிர்பார்க்கப்பட்டது ${util.joinValues(issue.values, \"|\")} இல் ஒன்று`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `மிக பெரியது: எதிர்பார்க்கப்பட்டது ${issue.origin ?? \"மதிப்பு\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"உறுப்புகள்\"} ஆக இருக்க வேண்டும்`;\n                }\n                return `மிக பெரியது: எதிர்பார்க்கப்பட்டது ${issue.origin ?? \"மதிப்பு\"} ${adj}${issue.maximum.toString()} ஆக இருக்க வேண்டும்`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} ஆக இருக்க வேண்டும்`; //\n                }\n                return `மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${issue.origin} ${adj}${issue.minimum.toString()} ஆக இருக்க வேண்டும்`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `தவறான சரம்: \"${_issue.prefix}\" இல் தொடங்க வேண்டும்`;\n                if (_issue.format === \"ends_with\")\n                    return `தவறான சரம்: \"${_issue.suffix}\" இல் முடிவடைய வேண்டும்`;\n                if (_issue.format === \"includes\")\n                    return `தவறான சரம்: \"${_issue.includes}\" ஐ உள்ளடக்க வேண்டும்`;\n                if (_issue.format === \"regex\")\n                    return `தவறான சரம்: ${_issue.pattern} முறைபாட்டுடன் பொருந்த வேண்டும்`;\n                return `தவறான ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `தவறான எண்: ${issue.divisor} இன் பலமாக இருக்க வேண்டும்`;\n            case \"unrecognized_keys\":\n                return `அடையாளம் தெரியாத விசை${issue.keys.length > 1 ? \"கள்\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} இல் தவறான விசை`;\n            case \"invalid_union\":\n                return \"தவறான உள்ளீடு\";\n            case \"invalid_element\":\n                return `${issue.origin} இல் தவறான மதிப்பு`;\n            default:\n                return `தவறான உள்ளீடு`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}