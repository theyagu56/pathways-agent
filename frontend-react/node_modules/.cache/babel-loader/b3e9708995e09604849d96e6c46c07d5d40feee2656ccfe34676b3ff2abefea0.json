{"ast":null,"code":"import { _array, _tuple, _unknown } from \"./api.js\";\nimport { parse, parseAsync } from \"./parse.js\";\nimport * as schemas from \"./schemas.js\";\nimport { $ZodTuple } from \"./schemas.js\";\nexport class $ZodFunction {\n  constructor(def) {\n    this._def = def;\n    this.def = def;\n  }\n  implement(func) {\n    if (typeof func !== \"function\") {\n      throw new Error(\"implement() must be called with a function\");\n    }\n    const impl = (...args) => {\n      const parsedArgs = this._def.input ? parse(this._def.input, args, undefined, {\n        callee: impl\n      }) : args;\n      if (!Array.isArray(parsedArgs)) {\n        throw new Error(\"Invalid arguments schema: not an array or tuple schema.\");\n      }\n      const output = func(...parsedArgs);\n      return this._def.output ? parse(this._def.output, output, undefined, {\n        callee: impl\n      }) : output;\n    };\n    return impl;\n  }\n  implementAsync(func) {\n    if (typeof func !== \"function\") {\n      throw new Error(\"implement() must be called with a function\");\n    }\n    const impl = async (...args) => {\n      const parsedArgs = this._def.input ? await parseAsync(this._def.input, args, undefined, {\n        callee: impl\n      }) : args;\n      if (!Array.isArray(parsedArgs)) {\n        throw new Error(\"Invalid arguments schema: not an array or tuple schema.\");\n      }\n      const output = await func(...parsedArgs);\n      return this._def.output ? parseAsync(this._def.output, output, undefined, {\n        callee: impl\n      }) : output;\n    };\n    return impl;\n  }\n  input(...args) {\n    const F = this.constructor;\n    if (Array.isArray(args[0])) {\n      return new F({\n        type: \"function\",\n        input: new $ZodTuple({\n          type: \"tuple\",\n          items: args[0],\n          rest: args[1]\n        }),\n        output: this._def.output\n      });\n    }\n    return new F({\n      type: \"function\",\n      input: args[0],\n      output: this._def.output\n    });\n  }\n  output(output) {\n    const F = this.constructor;\n    return new F({\n      type: \"function\",\n      input: this._def.input,\n      output\n    });\n  }\n}\nfunction _function(params) {\n  return new $ZodFunction({\n    type: \"function\",\n    input: Array.isArray(params?.input) ? _tuple(schemas.$ZodTuple, params?.input) : params?.input ?? _array(schemas.$ZodArray, _unknown(schemas.$ZodUnknown)),\n    output: params?.output ?? _unknown(schemas.$ZodUnknown)\n  });\n}\nexport { _function as function };","map":{"version":3,"names":["_array","_tuple","_unknown","parse","parseAsync","schemas","$ZodTuple","$ZodFunction","constructor","def","_def","implement","func","Error","impl","args","parsedArgs","input","undefined","callee","Array","isArray","output","implementAsync","F","type","items","rest","_function","params","$ZodArray","$ZodUnknown","function"],"sources":["/Users/thiyagarajankamalakannan/Projects/pathways-ai/frontend-react/node_modules/zod/v4/core/function.js"],"sourcesContent":["import { _array, _tuple, _unknown } from \"./api.js\";\nimport { parse, parseAsync } from \"./parse.js\";\nimport * as schemas from \"./schemas.js\";\nimport { $ZodTuple } from \"./schemas.js\";\nexport class $ZodFunction {\n    constructor(def) {\n        this._def = def;\n        this.def = def;\n    }\n    implement(func) {\n        if (typeof func !== \"function\") {\n            throw new Error(\"implement() must be called with a function\");\n        }\n        const impl = ((...args) => {\n            const parsedArgs = this._def.input ? parse(this._def.input, args, undefined, { callee: impl }) : args;\n            if (!Array.isArray(parsedArgs)) {\n                throw new Error(\"Invalid arguments schema: not an array or tuple schema.\");\n            }\n            const output = func(...parsedArgs);\n            return this._def.output ? parse(this._def.output, output, undefined, { callee: impl }) : output;\n        });\n        return impl;\n    }\n    implementAsync(func) {\n        if (typeof func !== \"function\") {\n            throw new Error(\"implement() must be called with a function\");\n        }\n        const impl = (async (...args) => {\n            const parsedArgs = this._def.input ? await parseAsync(this._def.input, args, undefined, { callee: impl }) : args;\n            if (!Array.isArray(parsedArgs)) {\n                throw new Error(\"Invalid arguments schema: not an array or tuple schema.\");\n            }\n            const output = await func(...parsedArgs);\n            return this._def.output ? parseAsync(this._def.output, output, undefined, { callee: impl }) : output;\n        });\n        return impl;\n    }\n    input(...args) {\n        const F = this.constructor;\n        if (Array.isArray(args[0])) {\n            return new F({\n                type: \"function\",\n                input: new $ZodTuple({\n                    type: \"tuple\",\n                    items: args[0],\n                    rest: args[1],\n                }),\n                output: this._def.output,\n            });\n        }\n        return new F({\n            type: \"function\",\n            input: args[0],\n            output: this._def.output,\n        });\n    }\n    output(output) {\n        const F = this.constructor;\n        return new F({\n            type: \"function\",\n            input: this._def.input,\n            output,\n        });\n    }\n}\nfunction _function(params) {\n    return new $ZodFunction({\n        type: \"function\",\n        input: Array.isArray(params?.input)\n            ? _tuple(schemas.$ZodTuple, params?.input)\n            : (params?.input ?? _array(schemas.$ZodArray, _unknown(schemas.$ZodUnknown))),\n        output: params?.output ?? _unknown(schemas.$ZodUnknown),\n    });\n}\nexport { _function as function };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}